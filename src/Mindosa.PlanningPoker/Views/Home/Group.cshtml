@inherits Nancy.ViewEngines.Razor.NancyRazorViewBase<string>
@{
    Layout = "_Layout.cshtml";
}

<div id="link-panel">
    <a href="#" rv-on-click="vm.onClearClicked | preventDefault" title="Clear Selections" id="btn-clear"><i class="fa fa-refresh"></i></a>
    <a href="#" rv-on-click="vm.onSettingsClicked | preventDefault" title="Settings" id="lnk-settings"><i class="fa fa-cog"></i></a>
</div>
<div class="clear-fix"></div>
<div>
    <strong>Group Name:</strong> @Model
</div>

<div id="settings-panel">
    <div class="setting">
        <label for="user-name" class="field-label">User Name:</label>
        <input id="user-name" type="text" rv-value="model.myUserName" />
        <p>
            This is the name that will be shown to other users.
        </p>
    </div>
    <div class="setting">
        <label for="group-cards" class="field-label">Cards:</label>
        <input id="group-cards" type="text" rv-value="model.cardList" />
        <p>
            The cards are a coma delimited list of values. You may enter as many as you would like.
        </p>
    </div>
    <div class="setting">
        <label for="observer-only" class="field-label">Observer Only:</label>
        <div class="checkbox">
            <input id="observer-only" type="checkbox" value="true" rv-checked="model.observerOnly" />
            <label for="observer-only"></label>
        </div>
        <p>
            If you are an observer, you don't get to vote but you will get to see the results.
        </p>
    </div>
    <div class="actions">
        <button id="btn-updateSettings" rv-on-click="vm.onUpdateSettingsClicked" title="Update Settings">
            <i class="fa fa-upload"></i>Update Settings
        </button>
    </div>
</div>

<ul id="user-list" class="card-list inner-panel">
    <li rv-each-user="model.users">
        <div rv-unless="user.isObserver">
            <span class="user-name">{user.name}</span>
            <div class="user-card card" rv-class-selected="user.card.selected"><span rv-if="model.showSelections">{user.card.name}</span></div>
        </div>
    </li>
</ul>

<ul id="card-list" class="card-list">
    <li rv-each-card="model.cards" rv-on-click="vm.onCardClicked" class="card" rv-class-selected="card.selected">{card.name}</li>
</ul>

@section scripts{
    <!--Reference the SignalR library. -->
    <script src="/Scripts/jquery.signalR-2.0.3.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="/signalr/hubs"></script>
    <script src="/Scripts/rivets.bundled.min.js"></script>
    <script src="/Scripts/group.js"></script>

    <script type="text/javascript">

        $(function () {
            var el = document.getElementById('content-panel');

            group.init('@Model');
            
            rivets.bind(el, { model: group.model, vm: group.viewModel });
        });
    </script>

}